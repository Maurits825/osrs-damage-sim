name: osrs-dmg-sim-deploy

env:
  VENV_FOLDER: ~/.venv

on:
  workflow_run:
    workflows: [osrs-dmg-sim-test]
    types: [completed]
    branches: [main]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
    steps:
    - name: Check out
      uses: actions/checkout@v3

    - name: Check changes
      uses: dorny/paths-filter@v2
      id: filter
      with:
        base: HEAD
        filters: |
          backend:
            - 'backend/**'

  deploy:
    name: Deploy to AWS
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: debug
        run: | 
          echo ${{ needs.changes.outputs.backend == 'true' }}
          echo ${{ github.event.workflow_run.conclusion == 'success' }}

      - name: Check out
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      
      - name: Cache venv
        id: cache-venv
        uses: actions/cache@v3
        with:
          path: ${{ env.VENV_FOLDER }}
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements/common.txt') }}

      - name: Create venv
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv ${{ env.VENV_FOLDER }}
          . ${{ env.VENV_FOLDER }}/bin/activate
          pip install -r requirements/common.txt

      - name: Configure AWS Credentials
        run: |
          aws configure set region eu-central-1 --profile default
          aws configure set output json --profile default
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile default
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile default

      - name: Zappa deploy to AWS
        run: |
          . ${{ env.VENV_FOLDER }}/bin/activate
          zappa update production
